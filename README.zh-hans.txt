********************************************************************
                     D R U P A L    M O D U L E
********************************************************************
名称: ucenter
修改者: xiaotian < xietianbao1990@139.com >
         新浪微博： http://weibo.com/shiniudu
         使用介紹：http://worpress.sinaapp.com/?p=162
注意：改于drupal官方上的一个模块，因为通信不成功，还有效率上的考虑，
      自行做了修改。
Drupal: 6.x
********************************************************************

注意: 当ucenter及其他应用(非druapl)修改密码时，ucenter并不会发起修改
密码请求（或传递的密码参数为空）给其他应用。仅当用户在drupal中登
录成功，本模块才能从ucenter中获取并保存用户密码。
      
简介:

本模块旨在整合drupal和ucenter(一个在中国非常流行的用户管理系统)。同时
可以和许多网站系统整合，比如 "ECShop" "ShopEx" "ECMall" "Discuz! X" 
"Discuz!" "UCenter Home" "SupeSite" "X-Space" "ECMS" "PHPcms" "DedeCms"
"HDwiki" "PBdigg" 等等。

本模块目前提供以下功能：
●用户同步登录
●用户同步登出
●同步修改用户资料
●同步删除用户
●同步添加用户
●支持GBK/UTF8/BIG5等编码的ucenter

********************************************************************
须用注意：若原先drupal中有用户，须手动将它们导入到uceter中去。
drupal6.26与ucenter的密码加密方式同样是md5,直接导入即可。但要注意同名用户的问题。
安装:
一：
在ucenter中配置：

1. 进入ucenter后台，添加新应用：

    ucenter 用户管理中心 > 应用管理 > 添加新应用

2. 选择自定义安装：

    应用名称: (可随意填写，例如 drupal)
    应用的URL: (uc_client/api 目录名，例如 http://127.0.0.1/drupal/
    sites/all/modules/ucenter)
    通信密钥: (可随意填写，为空时系统自动生成随机密钥)
    应用类型: (请选择其他)
    是否开启同步登录: (请选择是)
    是否接受通知：(请选择是)
    其他: (请保持默认值或为空)

3. 点击"提交"按钮，提示"成功添加应用"。复制页面下方的"应用的 Ucenter
   配置信息"。

4. 找到本模块的config.inc.php文件，并设置:

    清空文本已有的配置信息，将刚才复制的代码，粘贴到那个位置,保存。

5. 修改uc.php文件，修改前面两个配置文件

define('DRUPAL_PATH', '/mnt/app/drupal'); //drupal应用安装的绝对路径
    把 /mnt/app/drupal 改为自己drupal的绝对路径

define('DRUPAL_BASE_URL', 'http://www.jychwl.com'); //drupal应用的绝以url
    把 http://www.jychwl.com 改为自己drupal的根目录的url.
6. 修改user模块的一个文件。找到user模块下的user.pages.inc文件，找到
    user_logout函数，把里面的goto()注释掉.
    (因为，drupal跳转得太快，来不及通知其应用，所以须把它给注释了，用自己的跳转机制)
    或许，有人不建议不修改内核，但这实在是没办法。就算不改内核，升也drupal7
    也没法用。

二：
在drupal中配置：

1. 将ucenter 模块，将解压的文件夹放到 Drupal 的 modules 目录 (
   例如 sites/all/modules/ucenter 或 modules/ucenter).

2. 在drupal 的管理后台启用本模块:

     Administer > Site building > Modules
     或用drush: drush pm-enable ucenter

3. 启用本模块后，你还必须进入ucenter后台进行验证。 

4. 在ucenter后台，查看是否己经和drupal通知成功。
    到这里，你已经完成ucenter模块的配置了。

********************************************************************

*****************原理说明*******************************************

总摘要：
    以ucenter做为用户管理的统一平台，以众多drupal内核做功能不同的应用。
以用户名为唯一的标识，以ucenter的用户资料为准，其它应用可保留额外的信息，
其它应用改变基本的资料（用户名、密码、邮件）须通知ucenter，否则修不成功，
因为在以后调用ucenter认证成功时，会更新关鍵的基本信息。

使用总则：
    1.使用前须将应用的全部用户导入到ucenter中去。
      注意应用与ucenter的加密算法，还有与ucenter中的用户同名的问题。
      不应导入同名的用户，同名的用户将视为同一个ID。
        例如下面几种情况

     1). 如果是将drupal的应用新投入到使用中，开启用户同步，注意注册的第一个超级用户，
         同步后，须将超级用户手动导入到ucenter中去。如果在安装drupal时，使用ucenter
         中己有用户为超级用户，在启用ucenter模块后，直接使用那个ucenter的用户登陆，应用
         会以ucenter的用户资料为标准，更新drupal中的超级用户信息。

     2). 如果是用很多用户的应用，须将所有用户手动导入到ucenter中去，不应导入同名的用户，
         同名的用户将视为同一个ID。（这个问题有待改进）。
         还有，应用与ucenter的加密算法不一样的问题。如果没保留有明文密码，是无法直接导入的。
         目前ucenter1.6与drupal6.26都是使用md5算法。因此是可以直接导入的。
         由于刚开始时，将应用中的用户直接导入到ucenter中，并没有为应用中用户与ucenter中的
         用户建立一张关系表，所以在后期的运行中，会动态地建立一张关系表。
    
    2.ucenter的用户初次使用应用，检查用提供的信息进行登陆是否成功，若成功后，检查应用drupal的
      user表中是否存为这个用户，如果没有，则把它插入到user和ucenter_user表中。由于就应用的user表，
      已经存在相关记录，后面的drupal内置的验证自然成功（自动激活用户），后改匿名会话为登陆会话。
      后期通知其它应用登陆状态信息，加载cookie到当前的浏览器.
      ucenter是通过输出一段代码来实现通知其它应用的。说白了，就是为了获取得标识其登陆状态的cookie.
      因为，登陆后，drupal实现是跳转太快了，根本就没法证那段代码执行，网上有些是把它写到一个文件中去，
      到下次请求时，根据会话id,把它拿出来。但，我考虑到如果用drupal做集群来水平扩展时，会失效。
      故，我这里用的方式是，把它写到用户的会话中去，等它跳转后，再拿出来，输出到页面，通知其它应用登陆。

    3.正常的登陆使用。到uc中验证成功后，加载drupal应用中的users和ucenter_users,若存在相关的记录，
      则视为正常的登陆，并更新应用中的密码与邮件。
      关于会话，由应用自己去维护，由于在ucenter成功验证后，会更新drupal就应用的密码和邮件，故此时，
      应用一会成功登陆。至于通知其它应用跟上面第二步一样的。

    4.正常的登出。drupal其实是调用了user_logout(),它会去掉会话，能过logout勾子执行通知ucenter用户
      退出的信息，并得出通知其它应用的代码，并把它输出到页面中去，以通知其它应用用户登出的信息。
      同样也遇到drupal跳转太快的问题，这里就没有那么好解决了。本来可以按步骤2的思想做的，但我试了，
      会话中，保存信息到匿名会话中去，等下次请求时，再拿出来。但是，可恨的是，总是不成功。
      最后没办法，只能把drupal的跳转给去了。即把user_logou()里面的goto()给注释了。用自己的方式实现跳转，
      那样可以通知其它应用了，而且做水平扩展是没有问题的。
    
    5.正常的新增用户.插入用户时，drupal插好用户后就调用勾子，执行到ucenter注册一个用户的代码。
      同时，建立与drupal与ucenter用户关系记录。

    6.正常的删除用户。删除了drupal中的用户后，通知ucenter删除这个用户的在ucenter的相关信息。
      注意，这里存在一个安全隐患，若是其它应用的超级用户在这个应用中登陆，而在这个无关紧要的应用通知ucenter,
      把其它应用中的超级用户给删了，这个是不行的。这时，就要在ucenter中设置，把起级用户设为保护状态，那无关紧要的
      应用就无法把其它应用的超级用户给删了。

    7.正常的更新用戶資料。drupal中更新应用的资料后，调用勾子执行通知ucenter更新相关的信息。这个是必须，否则修改
      不成功，因为在登陆时，还会更新drupal中的用户的关键信息。

    8.drupal接受ucenter中发来的通知。实际上，是通知其它应用代理实现的。
      
      1).登陆。接受发来的请求的uid与动作。查找在关系表中是否存在相关用户，没有则不理会。有则启动drupal，
      把匿名会话信息重置为特定用户的会话。这个操作的关键进更新全局用户与会话信息，还有发送cookie，生命周期完成后，
      drupal会将会话信息写到session表中去，作为登陆会话标识。
      问题：如果同个浏览器中多个用户登陆怎么办？
      这个在drupal中好解决，一个浏览器只能登一个用户，因为drupal会在每次登陆后，它会去掉以前的cookie,再发送新的会话cookie.

      2).登出。这时接受的请求只有动作。别的应用通知时，并没带有uid,但因为是己登陆用户，自然有标识其uid的cookie.
     查找在关系表中是否存在相关用户，没有则不理会。有则启动drupal，消去会话信息，用session_destroy()去掉数据库中登陆的记录，
     更新user表用户的登陆状态。

      3).删除用户。这个接受的通知是ucenter直接发送的，不必由其它应用代理。
     查找在关系表ucenter_user和user中是否存在相关用户，没有则不理会。有则，先把关系表的记录删除，再把drupal中users表的记录删除。

      4).更新用户名。这个接受的通知是ucenter直接发送的，不必由其它应用代理。
     查找在关系表ucenter_user和user中是否存在相关用户，没有则不理会。有则，更新user表中的用户名。

      5).更新密码。这个接受的通知是ucenter直接发送的，不必由其它应用代理。
     查找在关系表ucenter_user和user中是否存在相关用户，没有则不理会。有则，更新user表中的密码。

      6).其它应用更新了密码，但没有通知本drupal应用，在本应用登陆后，会更新本drupal中的密码。




